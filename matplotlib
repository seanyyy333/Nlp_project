from PIL import Image
import matplotlib.pyplot as plt

# Display images
image1 = Image.open('image.png')

fig, axs = plt.subplots(1, 1, figsize=(15, 7))

axs.imshow(image1)
axs.set_title('Final State Entropy vs. Wolfram Rule Number (1D CA)')
axs.set_xlabel('Wolfram Rule Number')
axs.set_ylabel('Shannon Entropy of Final State')

plt.show()

print("--- Task 9: Analyzing Simulation Output with Machine Learning/Data Analysis ---")
print("  Analyzing Game of Life history (300 generations, 150x150 grid).")
print("  Extracted and counted 512 unique 3x3 patterns.\n")

print("  Top 10 most common 3x3 patterns:\n")

print("  Pattern (Count: 5233325):")
print("[[0 0 0]")
print(" [0 0 0]")
print(" [0 0 0]]\n")

print("  Pattern (Count: 80669):")
print("[[0 0 1]")
print(" [0 0 0]")
print(" [0 0 0]]\n")

print("  Pattern (Count: 80384):")
print("[[0 0 0]")
print(" [0 0 0]")
print(" [1 0 0]]\n")

print("  Pattern (Count: 80055):")
print("[[0 0 0]")
print(" [0 0 0]")
print(" [0 0 1]]\n")

print("  Pattern (Count: 79913):")
print("[[1 0 0]")
print(" [0 0 0]")
print(" [0 0 0]]\n")

print("  Pattern (Count: 38869):")
print("[[0 0 0]")
print(" [1 0 0]")
print(" [1 0 0]]\n")

print("  Pattern (Count: 38749):")
print("[[1 0 0]")
print(" [1 0 0]")
print(" [0 0 0]]\n")

print("  Pattern (Count: 38502):")
print("[[0 0 0]")
print(" [0 0 0]")
print(" [0 1 1]]\n")

print("  Pattern (Count: 38364):")
print("[[0 1 1]")
print(" [0 0 0]")
print(" [0 0 0]]\n")

print("  Pattern (Count: 38320):")
print("[[0 0 0]")
print(" [0 0 1]")
print(" [0 0 1]]\n")

print("  Prepared 6727500 data points for next state prediction.")
print("  Attempting to train a simple Decision Tree model...")
print("  Decision Tree Model Accuracy on Test Data: 0.9647")
print("  This shows how well a model can learn the Game of Life rules from simulation data.\n")

print("--- Task 9 Complete ---\n")

print("--- Task 10: Parameter Sweeping and Sensitivity Analysis ---")
print("  Sweeping through CA Rule Numbers: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150, 155, 160, 165, 170, 175, 180, 185, 190, 195, 200, 205, 210, 215, 220, 225, 230, 235, 240, 245, 250, 255]")
print("  Using Grid Size: 200, Generations: 300\n")
print("  Running CA for Rule 0...")
print("  Running CA for Rule 5...")
print("  Running CA for Rule 10...")
print("  Running CA for Rule 15...")
print("  Running CA for Rule 20...")
print("  Running CA for Rule 25...")
print("  Running CA for Rule 30...")
print("  Running CA for Rule 35...")
print("  Running CA for Rule 40...")
print("  Running CA for Rule 45...")
print("  Running CA for Rule 50...")
print("  Running CA for Rule 55...")
print("  Running CA for Rule 60...")
print("  Running CA for Rule 65...")
print("  Running CA for Rule 70...")
print("  Running CA for Rule 75...")
print("  Running CA for Rule 80...")
print("  Running CA for Rule 85...")
print("  Running CA for Rule 90...")
print("  Running CA for Rule 95...")
print("  Running CA for Rule 100...")
print("  Running CA for Rule 105...")
print("  Running CA for Rule 110...")
print("  Running CA for Rule 115...")
print("  Running CA for Rule 120...")
print("  Running CA for Rule 125...")
print("  Running CA for Rule 130...")
print("  Running CA for Rule 135...")
print("  Running CA for Rule 140...")
print("  Running CA for Rule 145...")
print("  Running CA for Rule 150...")
print("  Running CA for Rule 155...")
print("  Running CA for Rule 160...")
print("  Running CA for Rule 165...")
print("  Running CA for Rule 170...")
print("  Running CA for Rule 175...")
print("  Running CA for Rule 180...")
print("  Running CA for Rule 185...")
print("  Running CA for Rule 190...")
print("  Running CA for Rule 195...")
print("  Running CA for Rule 200...")
print("  Running CA for Rule 205...")
print("  Running CA for Rule 210...")
print("  Running CA for Rule 215...")
print("  Running CA for Rule 220...")
print("  Running CA for Rule 225...")
print("  Running CA for Rule 230...")
print("  Running CA for Rule 235...")
print("  Running CA for Rule 240...")
print("  Running CA for Rule 245...")
print("  Running CA for Rule 250...")
print("  Running CA for Rule 255...\n")


print("  --- Parameter Sweep Results (Final State Entropy) ---")
print("  Rule 0: 0.0000")
print("  Rule 5: 0.0560")
print("  Rule 10: 0.0315")
print("  Rule 15: 0.0315")
print("  Rule 20: 0.0560")
print("  Rule 25: 0.1169")
print("  Rule 30: 0.6923")
print("  Rule 35: 0.0560")
print("  Rule 40: 0.0000")
print("  Rule 45: 0.6769")
print("  Rule 50: 0.6931")
print("  Rule 55: 0.0000")
print("  Rule 60: 0.4397")
print("  Rule 65: 0.1347")
print("  Rule 70: 0.6931")
print("  Rule 75: 0.6899")
print("  Rule 80: 0.0315")
print("  Rule 85: 0.0315")
print("  Rule 90: 0.4397")
print("  Rule 95: 0.0000")
print("  Rule 100: 0.0315")
print("  Rule 105: 0.6919")
print("  Rule 110: 0.6847")
print("  Rule 115: 0.0315")
print("  Rule 120: 0.0315")
print("  Rule 125: 0.0980")
print("  Rule 130: 0.0315")
print("  Rule 135: 0.6919")
print("  Rule 140: 0.0315")
print("  Rule 145: 0.6616")
print("  Rule 150: 0.6919")
print("  Rule 155: 0.0315")
print("  Rule 160: 0.0000")
print("  Rule 165: 0.4397")
print("  Rule 170: 0.0315")
print("  Rule 175: 0.0315")
print("  Rule 180: 0.0560")
print("  Rule 185: 0.0560")
print("  Rule 190: 0.5623")
print("  Rule 195: 0.4397")
print("  Rule 200: 0.0000")
print("  Rule 205: 0.0560")
print("  Rule 210: 0.4397")
print("  Rule 215: 0.0000")
print("  Rule 220: 0.0315")
print("  Rule 225: 0.1517")
print("  Rule 230: 0.5568")
print("  Rule 235: 0.0000")
print("  Rule 240: 0.0315")
print("  Rule 245: 0.0315")
print("  Rule 250: 0.6931")
print("  Rule 255: 0.0000")
print("  -----------------------------------------------------\n")

print("  Performing Sensitivity Analysis for Lotka-Volterra (varying beta):")
print("  Testing beta values: [0.005      0.00777778 0.01055556 0.01333333 0.01611111 0.01888889")
print(" 0.02166667 0.02444444 0.02722222 0.03      ]\n")
print("  Running LV for Beta 0.0050...")
print("  Error running LV for Beta 0.0050: name 'run_lotka_volterra_simulation' is not defined")
print("  Running LV for Beta 0.0078...")
print("  Error running LV for Beta 0.0078: name 'run_lotka_volterra_simulation' is not defined")
print("  Running LV for Beta 0.0106...")
print("  Error running LV for Beta 0.0106: name 'run_lotka_volterra_simulation' is not defined")
print("  Running LV for Beta 0.0133...")
print("  Error running LV for Beta 0.0133: name 'run_lotka_volterra_simulation' is not defined")
print("  Running LV for Beta 0.0161...")
print("  Error running LV for Beta 0.0161: name 'run_lotka_volterra_simulation' is not defined")
print("  Running LV for Beta 0.0189...")
print("  Error running LV for Beta 0.0189: name 'run_lotka_volterra_simulation' is not defined")
print("  Running LV for Beta 0.0217...")
print("  Error running LV for Beta 0.0217: name 'run_lotka_volterra_simulation' is not defined")
print("  Running LV for Beta 0.0244...")
print("  Error running LV for Beta 0.0244: name 'run_lotka_volterra_simulation' is not defined")
print("  Running LV for Beta 0.0272...")
print("  Error running LV for Beta 0.0272: name 'run_lotka_volterra_simulation' is not defined")
print("  Running LV for Beta 0.0300...")
print("  Error running LV for Beta 0.0300: name 'run_lotka_volterra_simulation' is not defined\n")


print("  --- Sensitivity Analysis Results (Average Predator Population) ---")
print("  Beta 0.0050: Average Predators = nan")
print("  Beta 0.0078: Average Predators = nan")
print("  Beta 0.0106: Average Predators = nan")
print("  Beta 0.0133: Average Predators = nan")
print("  Beta 0.0161: Average Predators = nan")
print("  Beta 0.0189: Average Predators = nan")
print("  Beta 0.0217: Average Predators = nan")
print("  Beta 0.0244: Average Predators = nan")
print("  Beta 0.0272: Average Predators = nan")
print("  Beta 0.0300: Average Predators = nan")
print("  -----------------------------------------------------------------\n")

print("--- Task 10 Complete ---\n")